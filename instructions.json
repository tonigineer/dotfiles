[
    {
        "name": "pacman",
        "category": "base",
        "packages": [],
        "configs": [],
        "checks": [
            "cat /etc/pacman.conf | grep -x ILoveCandy",
            "cat /etc/pacman.conf | grep -x 'ParallelDownloads = 10'",
            "cat /etc/pacman.conf | grep -x Color"
        ],
        "prior_install": [],
        "post_install": [
            "sudo sh -c 'sed -i \"s/#Color/Color/g\" /etc/pacman.conf'",
            "sudo sh -c 'sed -i \"s/#NoProgressBar/ILoveCandy/g\" /etc/pacman.conf'",
            "sudo sh -c 'sed -i \"s/#ParallelDownloads = 5/ParallelDownloads = 10/g\" /etc/pacman.conf'",
            "sudo sh -c 'echo ''\\[multilib\\]'' >> /etc/pacman.conf'",
            "sudo sh -c 'echo ''Include = /etc/pacman.d/mirrorlist'' >> /etc/pacman.conf'"
        ]
    },
    {
        "name": "Bash",
        "category": "base",
        "packages": [
            "cmatrix",
            "tty-clock",
            "eza",
            "ttf-jetbrains-mono-nerd",
            "ttf-cascadia-code-nerd",
            "monaspace-font",
            "tar",
            "curl",
            "zip",
            "unzip",
            "wget",
            "fontconfig",
            "curl",
            "terminus-font"
        ],
        "configs": [
            "bash"
        ],
        "checks": [
            "[ -L ~/.bashrc ] && true || false"
        ],
        "prior_install": [
            "mv $HOME/.bashrc $HOME/.bashrc_bak",
            "mv $HOME/.bash_profile $HOME/.bash_profile_bak",
            "git config --global credential.helper store"
        ],
        "post_install": [
            "fc-cache -v"
        ]
    },
    {
        "name": "VIm",
        "category": "base",
        "packages": [
            "vim"
        ],
        "configs": [
            "vim"
        ],
        "checks": [
            "[ -L ~/.vimrc ] && true || false",
            "sudo [ -L /root/.vimrc ] && true || false"
        ],
        "prior_install": [],
        "post_install": [
            "sudo ln -sf $HOME/.vimrc /root/.vimrc"
        ]
    },
    {
        "name": "ZSH (clone Repo)",
        "category": "base",
        "packages": [
            "zsh",
            "ttf-jetbrains-mono-nerd",
            "ttf-cascadia-code-nerd",
            "monaspace-font"
        ],
        "configs": [],
        "checks": [
            "[[ \"$(git -C $HOME/.config/zsh remote get-url origin 2>/dev/null)\" == \"https://github.com/tonigineer/zsh\" ]] && true || false",
            "[ -L ~/.zshrc ] && true || false"
        ],
        "prior_install": [
            "git clone https://github.com/tonigineer/zsh $HOME/.config/zsh"
        ],
        "post_install": [
            "ln -s $HOME/.config/zsh/.zshrc $HOME/.zshrc"
        ]
    },
    {
        "name": "Audio",
        "category": "base",
        "packages": [
            "pipewire",
            "wireplumber",
            "pipewire-audio",
            "pipewire-alsa",
            "pipewire-pulse",
            "pipewire-jack",
            "pavucontrol",
            "playerctl"
        ],
        "configs": [],
        "checks": [],
        "prior_install": [],
        "post_install": []
    },
    {
        "name": "Bluetooth",
        "category": "base",
        "packages": [
            "bluez",
            "bluez-utils"
        ],
        "configs": [],
        "checks": [
            "systemctl status bluetooth.service | grep Running"
        ],
        "prior_install": [],
        "post_install": [
            "sudo systemctl enable bluetooth",
            "sudo systemctl start bluetooth"
        ]
    },
    {
        "name": "Nvidia",
        "category": "hypr",
        "packages": [
            "nvidia",
            "nvidia-utils"
        ],
        "configs": [],
        "checks": [
            "grep -F 'options nvidia_drm modeset=1' /etc/modprobe.d/nvidia.conf",
            "grep -F 'nvidia nvidia_modeset nvidia_uvm nvidia_drm' /etc/mkinitcpio.conf"
        ],
        "prior_install": [
            "sudo sh -c 'echo \"options nvidia_drm modeset=1\" > /etc/modprobe.d/nvidia.conf'",
            "sudo sh -c 'sed -i \"s/MODULES=()/MODULES=(nvidia nvidia_modeset nvidia_uvm nvidia_drm)/\" /etc/mkinitcpio.conf'"
        ],
        "post_install": [
            "sudo mkinitcpio -P"
        ]
    },
    {
        "name": "Hyprland",
        "category": "hypr",
        "packages": [
            "hyprland",
            "hyprpaper",
            "hypridle",
            "hyprlock",
            "hyprpolkitagent",
            "hypr-zoom",
            "xdg-desktop-portal",
            "xdg-desktop-portal-wlr",
            "xdg-desktop-portal-hyprland",
            "qt5ct",
            "qt5-wayland",
            "qt6ct",
            "qt6-wayland",
            "archlinux-xdg-menu",
            "monaspace-font",
            "swaync",
            "brightnessctl",
            "libdbusmenu-gtk3",
            "socat",
            "jq",
            "iwd",
            "rofi"
        ],
        "configs": [
            "hyprland",
            "swaync"
        ],
        "checks": [
            "fc-list | grep Monaspace",
            "[ -L $HOME/.config/hypr ] && true || false",
            "[ -L $HOME/.config/swaync ] && true || false",
            "[ -L $HOME/.local/share/backgrounds ] && true || false"
        ],
        "prior_install": [
            "[ -d $HOME/Storage ] || git clone https://github.com/tonigineer/dotfiles-data.git $HOME/DotfilesData"
        ],
        "post_install": [
            "fc-cache -v",
            "mkdir -p ~/.local/share",
            "ln -s $HOME/DotfilesData/backgrounds $HOME/.local/share/backgrounds"
        ]
    },
    {
        "name": "Theming",
        "category": "hypr",
        "packages": [
            "morewaita-icon-theme-git",
            "rose-pine-cursor",
            "rose-pine-hyprcursor",
            "gtk-theme-material-black",
            "ttf-cascadia-code-nerd"
        ],
        "configs": [],
        "checks": [],
        "prior_install": [],
        "post_install": [
            "$HOME/.config/hypr/scripts/theme.sh Material-Black-Cherry MoreWaita BreezeX-RosePine-Linux 32 'CaskaydiaCove Nerd Font 10'"
        ]
    },
    {
        "name": "Kitty",
        "category": "hypr",
        "packages": [
            "kitty",
            "monaspace-font",
            "lazygit",
            "yazi",
            "ttf-joypixels"
        ],
        "configs": [
            "kitty",
            "yazi"
        ],
        "checks": [
            "[ -L ~/.config/yazi ] && true || false",
            "[ -L ~/.config/kitty ] && true || false"
        ],
        "prior_install": [],
        "post_install": [
            "fc-cache -v",
            "ya pkg add yazi-rs/plugins:no-status",
            "ya pkg add yazi-rs/plugins:git",
            "ya pkg add yazi-rs/plugins:smart-enter",
            "ya pkg add marcosvnmelo/kanagawa-dragon"
        ]
    },
    {
        "name": "Fabric",
        "category": "hypr",
        "packages": [
            "gray-git"
        ],
        "configs": [
            "fabric"
        ],
        "checks": [
            "[ -L ~/.config/fabric ] && true || false"
        ],
        "prior_install": [
            "ln -s ~/Dotfiles/fabric/.config/fabric/assets/icons ~/.local/share"
        ],
        "post_install": [
            "python -m venv $HOME/.config/fabric/.venv",
            "$HOME/.config/fabric/.venv/bin/pip install -r $HOME/.config/fabric/requirements.txt"
        ]
    },
    {
        "name": "Quickshell",
        "category": "hypr",
        "packages": [
            "quickshell",
            "ddcutil-service",
            "ttf-material-symbols-variable-git",
            "qt6-5compat"
        ],
        "configs": [
            "quickshell"
        ],
        "checks": [
            "[ -L ~/.config/quickshell ] && true || false"
        ],
        "prior_install": [],
        "post_install": []
    },
    {
        "name": "Neovim (clone Repo)",
        "category": "tool",
        "packages": [
            "neovim",
            "wl-clipboard",
            "npm",
            "luarocks",
            "lua51",
            "python-pip",
            "python-pynvim",
            "ripgrep",
            "fd",
            "wget",
            "go",
            "lazygit"
        ],
        "configs": [],
        "checks": [
            "[[ \"$(git -C $HOME/.config/nvim remote get-url origin 2>/dev/null)\" == \"https://github.com/tonigineer/nvim\" ]] && true || false"
        ],
        "prior_install": [
            "git clone https://github.com/tonigineer/nvim $HOME/.config/nvim"
        ],
        "post_install": [
            "sudo npm install -g tree-sitter-cli"
        ]
    },
    {
        "name": "Librewolf",
        "category": "tool",
        "packages": [
            "librewolf-bin",
            "xdg-desktop-portal",
            "xdg-desktop-portal-wlr",
            "xdg-desktop-portal-hyprland"
        ],
        "configs": [],
        "checks": [],
        "prior_install": [],
        "post_install": [
            "xdg-settings set default-web-browser librewolf.desktop"
        ]
    },
    {
        "name": "Zed",
        "category": "tool",
        "packages": [
            "zed",
            "xdg-desktop-portal",
            "xdg-desktop-portal-wlr",
            "xdg-desktop-portal-hyprland"
        ],
        "configs": [
            "zed"
        ],
        "checks": [],
        "prior_install": [],
        "post_install": []
    },
    {
        "name": "CLI Tools",
        "category": "util",
        "packages": [
            "btop",
            "cava",
            "fastfetch"
        ],
        "configs": [
            "btop",
            "cava",
            "fastfetch"
        ],
        "checks": [
            "[ -L ~/.config/btop ] && true || false",
            "[ -L ~/.config/cava ] && true || false",
            "[ -L ~/.config/fastfetch ] && true || false"
        ],
        "prior_install": [],
        "post_install": []
    },
    {
        "name": "mpv Youtube Player",
        "category": "util",
        "packages": [
            "mpv",
            "yt-dlp"
        ],
        "configs": [
            "mpv"
        ],
        "checks": [
            "[ -L ~/.config/mpv ] && true || false"
        ],
        "prior_install": [],
        "post_install": []
    },
    {
        "name": "Image/Video Capture",
        "category": "util",
        "packages": [
            "hyprshot",
            "grim",
            "slurp",
            "wf-recorder",
            "swappy",
            "wl-clipboard",
            "imagemagick"
        ],
        "configs": [
            "local"
        ],
        "checks": [
            "[ -e ~/.local/bin/capture ] && true || false"
        ],
        "prior_install": [],
        "post_install": []
    },
    {
        "name": "File Explorer",
        "category": "util",
        "packages": [
            "evince",
            "nemo",
            "ffmpegthumbnailer",
            "imv"
        ],
        "configs": [],
        "checks": [],
        "prior_install": [],
        "post_install": []
    },
    {
        "name": "Gaming",
        "category": "game",
        "packages": [
            "steam",
            "vesktop-bin",
            "mangohud",
            "lib32-fontconfig",
            "ttf-liberation",
            "wqy-microhei"
        ],
        "configs": [
            "mangohud"
        ],
        "checks": [
            "[ -L ~/.config/Mangohud ] && true || false"
        ],
        "prior_install": [],
        "post_install": [
            "fc-cache -v"
        ]
    }
]
